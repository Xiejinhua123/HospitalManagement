<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xmlns:context="http://www.springframework.org/schema/context"
     xsi:schemaLocation="
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context-3.0.xsd">
     

	<!-- 配置sessionFactory session工厂 -->
	<!-- 直接访问hibernate.cfg.xml的方式配置session工厂 -->
	<!-- 
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
    	<property name="configLocation">
    		<value>classpath:hibernate.cfg.xml</value>
    	</property>
    </bean>
      -->
      
      <!-- 数据源信息定义在spring配置文件中的情况 -->
      
      <!-- 配置数据库链接信息 -->
      <bean id="config" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
      	<property name="locations">
      		<list>
      			<value>classpath:jdbc.properties</value>
      		</list>
      	</property>
      </bean>
      
      <!-- 配置数据源 -->
      <!-- 链接池配置 -->
    	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
			<property name="user" value="${jdbc.username}"></property>
			<property name="password" value="${jdbc.password}"></property>
			<property name="driverClass" value="${jdbc.driver}"></property>
			<property name="jdbcUrl" value="${jdbc.url}"></property>
			<property name="minPoolSize" value="${jdbc.min_size}"></property>
			<property name="maxPoolSize" value="${jdbc.max_size}"></property>
			<property name="acquireIncrement" value="${jdbc.acquire_increment}"></property>
			<property name="checkoutTimeout" value="${jdbc.timeout}"/> 
			<property name="idleConnectionTestPeriod" value="${jdbc.idle_test_period}"></property>
			<property name="maxStatements" value="${jdbc.max_statements}"></property>
			<property name="initialPoolSize" value="${jdbc.initialPoolSize}"/> 
		</bean>
		    
      <!-- 配置session工厂 -->
      <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
      	
      	<!-- 使用数据源 -->
      	<property name="dataSource" ref="dataSource"/>
      	
      	<!-- 添加Hibernate配置参数 -->
		<property name="hibernateProperties">
			<props>
				
				<!-- 指定数据库方言 -->
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQL5Dialect
				</prop>
				
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				
				<!-- 指定缓存 -->
				<!-- 二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<!-- 缓存供应商 -->
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<!-- 查询缓存 -->
				<prop key="hibernate.cache.use_query_cache">true</prop>
				
			</props>
		</property>
		
		<!-- 可以简化hibernate映射文件的加载，<value>classpath:cn/bdqn/jboa/entity/</value>等于载入路径下所有的xml映射文件 -->
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:cn/vote/entity/</value>
			</list>
		</property>
		
      </bean>  <!-- spring方式配置数据库信息结束 -->
      
      <!-- 当前的所有bean注册信息 -->
      <import resource="applicationContext-bean.xml"/>
      
      
     <!-- 为session配置事务处理  定义事务管理器 -->
     <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
     	<property name="sessionFactory" ref="sessionFactory"></property>
     </bean>
     
     <!-- 定义事务增强，并指定事务管理器 -->
     <tx:advice id="txAdvice" transaction-manager="txManager">
     	<!-- 定义属性，声明事务规则 -->
     	<tx:attributes>
     		<tx:method name="find*" read-only="true" />
			<tx:method name="search*" read-only="true" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="do*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="*" propagation="REQUIRED" read-only="true" />
     	</tx:attributes>
     </tx:advice>
  
  <!-- 增强配置 -->
       <!-- 前置增强 -->
      <bean id="before" class="cn.vote.enhance.BeforeAdvice" />
       <!-- 后置增强 -->
      <bean id="after" class="cn.vote.enhance.AfterAdvice" />  
      <!-- 异常增强 -->
      <bean id="transactionManager" class="cn.vote.enhance.TransactionManager"/>
     
     <!-- 定义切面 -->
     <aop:config>
     	<!-- 定义切入点 -->
     	<aop:pointcut id="serviceMethod" expression="execution(* cn.vote.service.*.*(..))"/>
     	<!-- 将事务增强与切入点结合 -->
     	<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod"/>
     	<!-- 将增强与切点结合 -->
     	<aop:advisor pointcut-ref="serviceMethod" advice-ref="before"/>
      	<aop:advisor pointcut-ref="serviceMethod" advice-ref="after"/>
      	<aop:advisor pointcut-ref="serviceMethod" advice-ref="transactionManager"/>
     </aop:config>
     
</beans>